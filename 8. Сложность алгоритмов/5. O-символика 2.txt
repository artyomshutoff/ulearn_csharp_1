1. Если f(n) = O(n), то какие еще оценки верны?
f(n) = O(10n)
f(n) = O(0.001n)
f(n) = O(n + 1000/n)
f(n) = o(n^2)
f(n) = o(0.0001n^3 + 1000)

2. Алгоритм F имеет оценку сложности O(n^2), а алгоритм G - O(n). Тогда..
F может быть быстрее G на любом входе.
F может быть медленнее G на любом входе.
F может быть таким, что для любого nn он делает n^2 операций на некотором входе размера n.

3. Если f(n) = O(g(n)), то...
f(n) = O(g(n))
1000f(n) = O(g(n))
1000f(n) = O(g(n))

4. Даны два алгоритма F и G, решающие одну и ту же задачу, со сложностями f(n) и g(n), и f(n) = o(g(n)). Тогда...
Существует такой вход, на котором F выполнит меньше операций, чем G
Начиная с некоторого размера входа F в худшем случае выполняет меньше операций, чем G в худшем случае